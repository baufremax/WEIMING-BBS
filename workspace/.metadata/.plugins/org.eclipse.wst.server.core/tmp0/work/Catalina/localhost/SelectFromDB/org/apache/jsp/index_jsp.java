/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.92
 * Generated at: 2018-11-23 13:13:53 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

 
	public class Advisor {
		String URL = "jdbc:mysql://localhost/university";
		String USERNAME = "root";
		String PASSWORD = "wzy960806";
		
		Connection connection = null;
		PreparedStatement selectAdvisor = null;
		PreparedStatement insertAdvisor = null;
		PreparedStatement deleteAdvisor = null;
		ResultSet resultSet = null;
		
		public Advisor() {
			try {
				connection = DriverManager.getConnection(URL, USERNAME, PASSWORD);
				selectAdvisor = connection.prepareStatement(
						"SELECT * FROM university.advisor");
				insertAdvisor = connection.prepareStatement(
						"INSERT INTO university.advisor (s_ID, i_ID) VALUES (?, ?)");
				deleteAdvisor = connection.prepareStatement(
						"DELETE FROM university.advisor WHERE s_ID = ? AND i_ID = ?");
			}
			catch (SQLException e) {
				e.printStackTrace();
			}
		}
		
		public ResultSet getAdvisor() {
			try {
				resultSet = selectAdvisor.executeQuery();
				
			}
			catch (SQLException e) {
				e.printStackTrace();
			}
			return resultSet;
		}
		
		public int setAdvisor(String s_ID, String i_ID) {
			int result = 0;
			try {
				insertAdvisor.setString(1, s_ID);
				insertAdvisor.setString(2, i_ID);
				result = insertAdvisor.executeUpdate();
			}
			catch (SQLException e) {
				e.printStackTrace();
			}
			return result;
		}
		
		public int removeAdvisor(String s_ID, String i_ID) {
			int result = 0;
			try {
				deleteAdvisor.setString(1, s_ID);
				deleteAdvisor.setString(2, i_ID);
				result = deleteAdvisor.executeUpdate();
			}
			catch (SQLException e) {
				e.printStackTrace();
			}
			return result;
		}
	}
	
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');
 Class.forName("com.mysql.jdbc.Driver"); 
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>SelectFromDB</title>\n");
      out.write("</head>\n");
      out.write("<body>\t\t\n");
      out.write("\t<h3>SelectFromDB</h3>\n");
      out.write("\t");
      out.write('\n');
      out.write('	');
 
		// get tuple.
		Advisor advisor = new Advisor();
		ResultSet advisors = advisor.getAdvisor();
		
		int result = 0;
		// insert tuple.
		if (request.getParameter("submitInsert") != null) {		// check if the value is successfully submitted.
			String s_ID = new String();
			String i_ID = new String();
			
			if (request.getParameter("s_ID") != null) {
				s_ID = request.getParameter("s_ID");
			}
			if (request.getParameter("i_ID") != null) {
				i_ID = request.getParameter("i_ID");
			}
			
			result = advisor.setAdvisor(s_ID, i_ID);
		}
		
		// delete tuple.
		if (request.getParameter("submitDelete") != null) {		// check if the value is successfully submitted.
			String s_ID = new String();
			String i_ID = new String();
			
			if (request.getParameter("s_ID") != null) {
				s_ID = request.getParameter("s_ID");
			}
			if (request.getParameter("i_ID") != null) {
				i_ID = request.getParameter("i_ID");
			}
			result = advisor.removeAdvisor(s_ID, i_ID);
		}
		
      out.write('\n');
      out.write('\n');
      out.write('	');
      out.write("\n");
      out.write("\t<p>Insert A Tuple.</p>\n");
      out.write("\t<form action=\"index.jsp\" method=\"POST\" name=\"myInsertForm\">\n");
      out.write("\t<table border='0'>\n");
      out.write("\t\t<tbody>\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<td>S_ID:</td>\n");
      out.write("\t\t\t\t<td><input type=\"text\" name=\"s_ID\" size=\"50\"/></td>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<td>I_ID:</td>\n");
      out.write("\t\t\t\t<td><input type=\"text\" name=\"i_ID\" size=\"50\"/></td>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t</tbody>\n");
      out.write("\t</table>\n");
      out.write("\t");
      out.write("\n");
      out.write("\t<input type=\"hidden\" value=\"");
      out.print( result );
      out.write("\" name=\"hidden\" />\n");
      out.write("\t<input type=\"reset\" value=\"Clear\" name=\"clear\" />\n");
      out.write("\t<input type=\"submit\" value=\"Submit\" name=\"submitInsert\" />\n");
      out.write("\t</form>\n");
      out.write("\t\n");
      out.write("\t");
      out.write("\n");
      out.write("\t<p>Delete A Tuple.</p>\n");
      out.write("\t<form action=\"index.jsp\" method=\"POST\" name=\"myDeleteForm\">\n");
      out.write("\t<table border='0'>\n");
      out.write("\t\t<tbody>\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<td>S_ID:</td>\n");
      out.write("\t\t\t\t<td><input type=\"text\" name=\"s_ID\" size=\"50\"/></td>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<td>I_ID:</td>\n");
      out.write("\t\t\t\t<td><input type=\"text\" name=\"i_ID\" size=\"50\"/></td>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t</tbody>\n");
      out.write("\t</table>\n");
      out.write("\t");
      out.write("\n");
      out.write("\t<input type=\"hidden\" value=\"");
      out.print( result );
      out.write("\" name=\"hidden\" />\n");
      out.write("\t<input type=\"reset\" value=\"Clear\" name=\"clear\" />\n");
      out.write("\t<input type=\"submit\" value=\"Submit\" name=\"submitDelete\" />\n");
      out.write("\t</form>\n");
      out.write("\t\n");
      out.write("\t");
      out.write("\n");
      out.write("\t<table border=\"1\">\n");
      out.write("\t<tbody>\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t\t<td>S_ID</td>\n");
      out.write("\t\t\t<td>I_ID</td>\n");
      out.write("\t\t</tr>\n");
      out.write("\t\t");
 while (advisors.next()) { 
      out.write("\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t\t<td>");
      out.print( advisors.getString("s_ID") );
      out.write("</td>\n");
      out.write("\t\t\t<td>");
      out.print( advisors.getString("i_ID") );
      out.write("</td>\n");
      out.write("\t\t</tr>\n");
      out.write("\t\t");
 } 
      out.write("\n");
      out.write("\t</tbody>\n");
      out.write("\t</table>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
